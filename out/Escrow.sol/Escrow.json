{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "agreements",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "getAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "getSeller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recallFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "startEscrow",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "voidAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610779806100206000396000f3fe6080604052600436106100865760003560e01c806369d895751161005957806369d89575146101555780639f8a13d71461016a578063a2213262146101b6578063a323d29e146101fd578063f5a797671461024e57600080fd5b8063179cfd801461008b5780632373eed1146100a05780633ce2aa99146100b557806346d6a60e14610135575b600080fd5b61009e6100993660046106a7565b610287565b005b3480156100ac57600080fd5b5061009e610403565b3480156100c157600080fd5b506101046100d03660046106d3565b60006020819052908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080015b60405180910390f35b34801561014157600080fd5b5061009e6101503660046106d3565b6104ee565b34801561016157600080fd5b5061009e610611565b34801561017657600080fd5b506101a66101853660046106d3565b6001600160a01b031660009081526020819052604090206003015460ff1690565b604051901515815260200161012c565b3480156101c257600080fd5b506101ef6101d13660046106d3565b6001600160a01b031660009081526020819052604090206002015490565b60405190815260200161012c565b34801561020957600080fd5b506102366102183660046106d3565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b03909116815260200161012c565b34801561025a57600080fd5b506101ef6102693660046106d3565b6001600160a01b031660009081526020819052604090206001015490565b6001600160a01b03821633036102ef5760405162461bcd60e51b815260206004820152602260248201527f457363726f773a20416464726573736573206d7573742062652064697374696e60448201526118dd60f21b60648201526084015b60405180910390fd5b6000341161033f5760405162461bcd60e51b815260206004820152601860248201527f457363726f773a205061796d656e74206e6f742073656e74000000000000000060448201526064016102e6565b3360009081526020819052604090206003015460ff16156103b25760405162461bcd60e51b815260206004820152602760248201527f457363726f773a20416c72656164792061637469766520666f722074686973206044820152666164647265737360c81b60648201526084016102e6565b33600090815260208190526040902080546001600160a01b0319166001600160a01b03939093169290921782553460018084019190915560028301919091556003909101805460ff19169091179055565b3360009081526020819052604090206003015460ff166104355760405162461bcd60e51b81526004016102e6906106f7565b336000908152602081905260409020600201544210156104975760405162461bcd60e51b815260206004820152601c60248201527f457363726f773a20446561646c696e65206e6f7420796574206869740000000060448201526064016102e6565b3360008181526020819052604080822060010154905181156108fc0292818181858888f193505050501580156104d1573d6000803e3d6000fd5b50336000908152602081905260409020600301805460ff19169055565b6001600160a01b03811660009081526020819052604090206003015460ff166105295760405162461bcd60e51b81526004016102e6906106f7565b6001600160a01b038181166000908152602081905260409020541633146105a95760405162461bcd60e51b815260206004820152602e60248201527f457363726f773a204f6e6c79207468652062757965722063616e20766f69642060448201526d1d1a1a5cc81859dc99595b595b9d60921b60648201526084016102e6565b6001600160a01b03811660008181526020819052604080822060010154905181156108fc0292818181858888f193505050501580156105ec573d6000803e3d6000fd5b506001600160a01b03166000908152602081905260409020600301805460ff19169055565b3360009081526020819052604090206003015460ff166106435760405162461bcd60e51b81526004016102e6906106f7565b33600090815260208190526040808220805460019091015491516001600160a01b03909116926108fc831502929190818181858888f193505050501580156104d1573d6000803e3d6000fd5b6001600160a01b03811681146106a457600080fd5b50565b600080604083850312156106ba57600080fd5b82356106c58161068f565b946020939093013593505050565b6000602082840312156106e557600080fd5b81356106f08161068f565b9392505050565b6020808252602c908201527f457363726f773a204e6f206163746976652061677265656d656e7420666f722060408201526b74686973206164647265737360a01b60608201526080019056fea26469706673582212200e1e4bb76e33b59eaa6ce8e36bcfb83f41aff903e6ed523abc167f01714fae4064736f6c634300080f0033",
    "sourceMap": "406:2793:6:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100865760003560e01c806369d895751161005957806369d89575146101555780639f8a13d71461016a578063a2213262146101b6578063a323d29e146101fd578063f5a797671461024e57600080fd5b8063179cfd801461008b5780632373eed1146100a05780633ce2aa99146100b557806346d6a60e14610135575b600080fd5b61009e6100993660046106a7565b610287565b005b3480156100ac57600080fd5b5061009e610403565b3480156100c157600080fd5b506101046100d03660046106d3565b60006020819052908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080015b60405180910390f35b34801561014157600080fd5b5061009e6101503660046106d3565b6104ee565b34801561016157600080fd5b5061009e610611565b34801561017657600080fd5b506101a66101853660046106d3565b6001600160a01b031660009081526020819052604090206003015460ff1690565b604051901515815260200161012c565b3480156101c257600080fd5b506101ef6101d13660046106d3565b6001600160a01b031660009081526020819052604090206002015490565b60405190815260200161012c565b34801561020957600080fd5b506102366102183660046106d3565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b03909116815260200161012c565b34801561025a57600080fd5b506101ef6102693660046106d3565b6001600160a01b031660009081526020819052604090206001015490565b6001600160a01b03821633036102ef5760405162461bcd60e51b815260206004820152602260248201527f457363726f773a20416464726573736573206d7573742062652064697374696e60448201526118dd60f21b60648201526084015b60405180910390fd5b6000341161033f5760405162461bcd60e51b815260206004820152601860248201527f457363726f773a205061796d656e74206e6f742073656e74000000000000000060448201526064016102e6565b3360009081526020819052604090206003015460ff16156103b25760405162461bcd60e51b815260206004820152602760248201527f457363726f773a20416c72656164792061637469766520666f722074686973206044820152666164647265737360c81b60648201526084016102e6565b33600090815260208190526040902080546001600160a01b0319166001600160a01b03939093169290921782553460018084019190915560028301919091556003909101805460ff19169091179055565b3360009081526020819052604090206003015460ff166104355760405162461bcd60e51b81526004016102e6906106f7565b336000908152602081905260409020600201544210156104975760405162461bcd60e51b815260206004820152601c60248201527f457363726f773a20446561646c696e65206e6f7420796574206869740000000060448201526064016102e6565b3360008181526020819052604080822060010154905181156108fc0292818181858888f193505050501580156104d1573d6000803e3d6000fd5b50336000908152602081905260409020600301805460ff19169055565b6001600160a01b03811660009081526020819052604090206003015460ff166105295760405162461bcd60e51b81526004016102e6906106f7565b6001600160a01b038181166000908152602081905260409020541633146105a95760405162461bcd60e51b815260206004820152602e60248201527f457363726f773a204f6e6c79207468652062757965722063616e20766f69642060448201526d1d1a1a5cc81859dc99595b595b9d60921b60648201526084016102e6565b6001600160a01b03811660008181526020819052604080822060010154905181156108fc0292818181858888f193505050501580156105ec573d6000803e3d6000fd5b506001600160a01b03166000908152602081905260409020600301805460ff19169055565b3360009081526020819052604090206003015460ff166106435760405162461bcd60e51b81526004016102e6906106f7565b33600090815260208190526040808220805460019091015491516001600160a01b03909116926108fc831502929190818181858888f193505050501580156104d1573d6000803e3d6000fd5b6001600160a01b03811681146106a457600080fd5b50565b600080604083850312156106ba57600080fd5b82356106c58161068f565b946020939093013593505050565b6000602082840312156106e557600080fd5b81356106f08161068f565b9392505050565b6020808252602c908201527f457363726f773a204e6f206163746976652061677265656d656e7420666f722060408201526b74686973206164647265737360a01b60608201526080019056fea26469706673582212200e1e4bb76e33b59eaa6ce8e36bcfb83f41aff903e6ed523abc167f01714fae4064736f6c634300080f0033",
    "sourceMap": "406:2793:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:506;;;;;;:::i;:::-;;:::i;:::-;;2378:333;;;;;;;;;;;;;:::i;427:47::-;;;;;;;;;;-1:-1:-1;427:47:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;427:47:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1013:32:8;;;995:51;;1077:2;1062:18;;1055:34;;;;1105:18;;;1098:34;1175:14;1168:22;1163:2;1148:18;;1141:50;982:3;967:19;427:47:6;;;;;;;;1896:333;;;;;;;;;;-1:-1:-1;1896:333:6;;;;;:::i;:::-;;:::i;1524:247::-;;;;;;;;;;;;;:::i;2763:101::-;;;;;;;;;;-1:-1:-1;2763:101:6;;;;;:::i;:::-;-1:-1:-1;;;;;2835:17:6;2816:4;2835:17;;;;;;;;;;:24;;;;;;2763:101;;;;1635:14:8;;1628:22;1610:41;;1598:2;1583:18;2763:101:6;1470:187:8;3086:109:6;;;;;;;;;;-1:-1:-1;3086:109:6;;;;;:::i;:::-;-1:-1:-1;;;;;3164:17:6;3142:7;3164:17;;;;;;;;;;:26;;;;3086:109;;;;1808:25:8;;;1796:2;1781:18;3086:109:6;1662:177:8;2868:105:6;;;;;;;;;;-1:-1:-1;2868:105:6;;;;;:::i;:::-;-1:-1:-1;;;;;2944:17:6;;;2922:7;2944:17;;;;;;;;;;:24;;;2868:105;;;;-1:-1:-1;;;;;2008:32:8;;;1990:51;;1978:2;1963:18;2868:105:6;1844:203:8;2977:105:6;;;;;;;;;;-1:-1:-1;2977:105:6;;;;;:::i;:::-;-1:-1:-1;;;;;3053:17:6;3031:7;3053:17;;;;;;;;;;:24;;;;2977:105;894:506;-1:-1:-1;;;;;998:20:6;;:10;:20;990:67;;;;-1:-1:-1;;;990:67:6;;2254:2:8;990:67:6;;;2236:21:8;2293:2;2273:18;;;2266:30;2332:34;2312:18;;;2305:62;-1:-1:-1;;;2383:18:8;;;2376:32;2425:19;;990:67:6;;;;;;;;;1083:1;1071:9;:13;1063:50;;;;-1:-1:-1;;;1063:50:6;;2657:2:8;1063:50:6;;;2639:21:8;2696:2;2676:18;;;2669:30;2735:26;2715:18;;;2708:54;2779:18;;1063:50:6;2455:348:8;1063:50:6;1138:10;1127;:22;;;;;;;;;;:29;;;;;:38;1119:90;;;;-1:-1:-1;;;1119:90:6;;3010:2:8;1119:90:6;;;2992:21:8;3049:2;3029:18;;;3022:30;3088:34;3068:18;;;3061:62;-1:-1:-1;;;3139:18:8;;;3132:37;3186:19;;1119:90:6;2808:403:8;1119:90:6;1231:10;1220;:22;;;;;;;;;;:38;;-1:-1:-1;;;;;;1220:38:6;-1:-1:-1;;;;;1220:38:6;;;;;;;;;;1296:9;-1:-1:-1;1264:29:6;;;:41;;;;1311:31;;;:42;;;;1359:29;;;;:36;;-1:-1:-1;;1359:36:6;;;;;;894:506::o;2378:333::-;2433:10;2422;:22;;;;;;;;;;:29;;;;;2414:86;;;;-1:-1:-1;;;2414:86:6;;;;;;;:::i;:::-;2544:10;2533;:22;;;;;;;;;;:31;;;2514:15;:50;;2506:91;;;;-1:-1:-1;;;2506:91:6;;3831:2:8;2506:91:6;;;3813:21:8;3870:2;3850:18;;;3843:30;3909;3889:18;;;3882:58;3957:18;;2506:91:6;3629:352:8;2506:91:6;2612:10;2633;:22;;;;;;;;;;;:29;;;2604:59;;;;;;;;2633:10;2604:59;2633:29;2612:10;2604:59;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2680:10:6;2701:5;2669:22;;;;;;;;;;:29;;:37;;-1:-1:-1;;2669:37:6;;;2378:333::o;1896:::-;-1:-1:-1;;;;;1963:17:6;;:10;:17;;;;;;;;;;:24;;;;;1955:81;;;;-1:-1:-1;;;1955:81:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;2064:17:6;;;:10;:17;;;;;;;;;;:24;;2050:10;:38;2042:97;;;;-1:-1:-1;;;2042:97:6;;4188:2:8;2042:97:6;;;4170:21:8;4227:2;4207:18;;;4200:30;4266:34;4246:18;;;4239:62;-1:-1:-1;;;4317:18:8;;;4310:44;4371:19;;2042:97:6;3986:410:8;2042:97:6;-1:-1:-1;;;;;2146:14:6;;2161:10;:17;;;;;;;;;;;:24;;;2146:40;;;;;;;;2161:10;2146:40;2161:24;2146:14;:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2192:17:6;2219:5;2192:17;;;;;;;;;;:24;;:32;;-1:-1:-1;;2192:32:6;;;1896:333::o;1524:247::-;1580:10;1569;:22;;;;;;;;;;:29;;;;;1561:86;;;;-1:-1:-1;;;1561:86:6;;;;;;;:::i;:::-;1665:10;1654;:22;;;;;;;;;;;:29;;;1693;;;;1654:69;;-1:-1:-1;;;;;1654:29:6;;;;:69;;;;;1693:29;1654:69;;:10;:69;1693:29;1654;:69;;;;;;;;;;;;;;;;;;;14:139:8;-1:-1:-1;;;;;97:31:8;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:331::-;234:6;242;295:2;283:9;274:7;270:23;266:32;263:52;;;311:1;308;301:12;263:52;350:9;337:23;369:39;402:5;369:39;:::i;:::-;427:5;479:2;464:18;;;;451:32;;-1:-1:-1;;;158:331:8:o;494:255::-;553:6;606:2;594:9;585:7;581:23;577:32;574:52;;;622:1;619;612:12;574:52;661:9;648:23;680:39;713:5;680:39;:::i;:::-;738:5;494:255;-1:-1:-1;;;494:255:8:o;3216:408::-;3418:2;3400:21;;;3457:2;3437:18;;;3430:30;3496:34;3491:2;3476:18;;3469:62;-1:-1:-1;;;3562:2:8;3547:18;;3540:42;3614:3;3599:19;;3216:408::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "agreements(address)": "3ce2aa99",
    "getAmount(address)": "f5a79767",
    "getDeadline(address)": "a2213262",
    "getSeller(address)": "a323d29e",
    "isActive(address)": "9f8a13d7",
    "recallFunds()": "2373eed1",
    "releaseFunds()": "69d89575",
    "startEscrow(address,uint256)": "179cfd80",
    "voidAgreement(address)": "46d6a60e"
  },
  "ast": {
    "absolutePath": "src/Escrow.sol",
    "id": 21314,
    "exportedSymbols": {
      "Escrow": [
        21313
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3162:6",
    "nodes": [
      {
        "id": 21052,
        "nodeType": "PragmaDirective",
        "src": "39:24:6",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21313,
        "nodeType": "ContractDefinition",
        "src": "406:2793:6",
        "nodes": [
          {
            "id": 21058,
            "nodeType": "VariableDeclaration",
            "src": "427:47:6",
            "constant": false,
            "functionSelector": "3ce2aa99",
            "mutability": "mutable",
            "name": "agreements",
            "nameLocation": "464:10:6",
            "scope": 21313,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
              "typeString": "mapping(address => struct Escrow.Agreement)"
            },
            "typeName": {
              "id": 21057,
              "keyType": {
                "id": 21054,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "435:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "427:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                "typeString": "mapping(address => struct Escrow.Agreement)"
              },
              "valueType": {
                "id": 21056,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21055,
                  "name": "Agreement",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21067,
                  "src": "446:9:6"
                },
                "referencedDeclaration": 21067,
                "src": "446:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Agreement_$21067_storage_ptr",
                  "typeString": "struct Escrow.Agreement"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 21067,
            "nodeType": "StructDefinition",
            "src": "479:109:6",
            "canonicalName": "Escrow.Agreement",
            "members": [
              {
                "constant": false,
                "id": 21060,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "518:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 21067,
                "src": "502:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21059,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "502:15:6",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21062,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "538:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 21067,
                "src": "530:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21061,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21064,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "558:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 21067,
                "src": "550:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21063,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21066,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "577:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 21067,
                "src": "572:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21065,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "572:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Agreement",
            "nameLocation": "486:9:6",
            "scope": 21313,
            "visibility": "public"
          },
          {
            "id": 21136,
            "nodeType": "FunctionDefinition",
            "src": "894:506:6",
            "body": {
              "id": 21135,
              "nodeType": "Block",
              "src": "984:416:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21076,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "998:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "998:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 21078,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21070,
                          "src": "1012:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "998:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a20416464726573736573206d7573742062652064697374696e6374",
                        "id": 21080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1020:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63eeadea22b5993bb266576262e5ff4fe4b0c1268cb4aa5b2ecb6e6437594fa8",
                          "typeString": "literal_string \"Escrow: Addresses must be distinct\""
                        },
                        "value": "Escrow: Addresses must be distinct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63eeadea22b5993bb266576262e5ff4fe4b0c1268cb4aa5b2ecb6e6437594fa8",
                          "typeString": "literal_string \"Escrow: Addresses must be distinct\""
                        }
                      ],
                      "id": 21075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "990:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "990:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21082,
                  "nodeType": "ExpressionStatement",
                  "src": "990:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1071:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 21086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1083:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1071:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a205061796d656e74206e6f742073656e74",
                        "id": 21088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1086:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_400f5b8b15b8d0860a1d4f4b10e56ac361a242c943f96dcf4b1d57c2cc7a6cfa",
                          "typeString": "literal_string \"Escrow: Payment not sent\""
                        },
                        "value": "Escrow: Payment not sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_400f5b8b15b8d0860a1d4f4b10e56ac361a242c943f96dcf4b1d57c2cc7a6cfa",
                          "typeString": "literal_string \"Escrow: Payment not sent\""
                        }
                      ],
                      "id": 21083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1063:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21090,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:50:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 21098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 21092,
                              "name": "agreements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21058,
                              "src": "1127:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                                "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                              }
                            },
                            "id": 21095,
                            "indexExpression": {
                              "expression": {
                                "id": 21093,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1138:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1138:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1127:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                              "typeString": "struct Escrow.Agreement storage ref"
                            }
                          },
                          "id": 21096,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21066,
                          "src": "1127:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 21097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1160:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1127:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a20416c72656164792061637469766520666f7220746869732061646472657373",
                        "id": 21099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1167:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1fd12218602f04f4cb8bb161955ff7148889cac1255e574272742e65c42d993",
                          "typeString": "literal_string \"Escrow: Already active for this address\""
                        },
                        "value": "Escrow: Already active for this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1fd12218602f04f4cb8bb161955ff7148889cac1255e574272742e65c42d993",
                          "typeString": "literal_string \"Escrow: Already active for this address\""
                        }
                      ],
                      "id": 21091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1119:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:90:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21101,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:90:6"
                },
                {
                  "expression": {
                    "id": 21108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 21102,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21058,
                          "src": "1220:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                            "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                          }
                        },
                        "id": 21105,
                        "indexExpression": {
                          "expression": {
                            "id": 21103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1231:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1231:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1220:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                          "typeString": "struct Escrow.Agreement storage ref"
                        }
                      },
                      "id": 21106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21060,
                      "src": "1220:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21107,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21070,
                      "src": "1252:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1220:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 21109,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:38:6"
                },
                {
                  "expression": {
                    "id": 21117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 21110,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21058,
                          "src": "1264:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                            "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                          }
                        },
                        "id": 21113,
                        "indexExpression": {
                          "expression": {
                            "id": 21111,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1275:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1275:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1264:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                          "typeString": "struct Escrow.Agreement storage ref"
                        }
                      },
                      "id": 21114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21062,
                      "src": "1264:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 21115,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1296:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1296:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1264:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21118,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:41:6"
                },
                {
                  "expression": {
                    "id": 21125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 21119,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21058,
                          "src": "1311:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                            "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                          }
                        },
                        "id": 21122,
                        "indexExpression": {
                          "expression": {
                            "id": 21120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1322:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1322:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1311:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                          "typeString": "struct Escrow.Agreement storage ref"
                        }
                      },
                      "id": 21123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21064,
                      "src": "1311:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21124,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21072,
                      "src": "1345:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1311:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21126,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:42:6"
                },
                {
                  "expression": {
                    "id": 21133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 21127,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21058,
                          "src": "1359:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                            "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                          }
                        },
                        "id": 21130,
                        "indexExpression": {
                          "expression": {
                            "id": 21128,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1370:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1370:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1359:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                          "typeString": "struct Escrow.Agreement storage ref"
                        }
                      },
                      "id": 21131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21066,
                      "src": "1359:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 21132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1391:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1359:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21134,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:36:6"
                }
              ]
            },
            "documentation": {
              "id": 21068,
              "nodeType": "StructuredDocumentation",
              "src": "592:299:6",
              "text": " @dev Creates an Agreement struct indexed by msg.sender as the buyer. The buyer must send funds,\n record the recipient of these funds (the seller), and set a deadline for the seller to complete\n the terms of the agreement offchain.\n deadline should be a unix timestamp"
            },
            "functionSelector": "179cfd80",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startEscrow",
            "nameLocation": "903:11:6",
            "parameters": {
              "id": 21073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21070,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "936:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 21136,
                  "src": "920:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 21069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:15:6",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21072,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "956:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 21136,
                  "src": "948:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "914:51:6"
            },
            "returnParameters": {
              "id": 21074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:0:6"
            },
            "scope": 21313,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21171,
            "nodeType": "FunctionDefinition",
            "src": "1524:247:6",
            "body": {
              "id": 21170,
              "nodeType": "Block",
              "src": "1555:216:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 21141,
                            "name": "agreements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21058,
                            "src": "1569:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                              "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                            }
                          },
                          "id": 21144,
                          "indexExpression": {
                            "expression": {
                              "id": 21142,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1580:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1580:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1569:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                            "typeString": "struct Escrow.Agreement storage ref"
                          }
                        },
                        "id": 21145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21066,
                        "src": "1569:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a204e6f206163746976652061677265656d656e7420666f7220746869732061646472657373",
                        "id": 21146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1600:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cd805d758ce4370fb80a367a0a8b1b35162c27b1907cf96b5ae3e628961c3",
                          "typeString": "literal_string \"Escrow: No active agreement for this address\""
                        },
                        "value": "Escrow: No active agreement for this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cd805d758ce4370fb80a367a0a8b1b35162c27b1907cf96b5ae3e628961c3",
                          "typeString": "literal_string \"Escrow: No active agreement for this address\""
                        }
                      ],
                      "id": 21140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1561:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:86:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21148,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:86:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 21155,
                            "name": "agreements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21058,
                            "src": "1693:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                              "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                            }
                          },
                          "id": 21158,
                          "indexExpression": {
                            "expression": {
                              "id": 21156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1704:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1704:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1693:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                            "typeString": "struct Escrow.Agreement storage ref"
                          }
                        },
                        "id": 21159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21062,
                        "src": "1693:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 21149,
                            "name": "agreements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21058,
                            "src": "1654:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                              "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                            }
                          },
                          "id": 21152,
                          "indexExpression": {
                            "expression": {
                              "id": 21150,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1665:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1665:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1654:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                            "typeString": "struct Escrow.Agreement storage ref"
                          }
                        },
                        "id": 21153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21060,
                        "src": "1654:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 21154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1654:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21161,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:69:6"
                },
                {
                  "expression": {
                    "id": 21168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 21162,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21058,
                          "src": "1729:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                            "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                          }
                        },
                        "id": 21165,
                        "indexExpression": {
                          "expression": {
                            "id": 21163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1740:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1740:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1729:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                          "typeString": "struct Escrow.Agreement storage ref"
                        }
                      },
                      "id": 21166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21066,
                      "src": "1729:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 21167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1761:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1729:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21169,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:37:6"
                }
              ]
            },
            "documentation": {
              "id": 21137,
              "nodeType": "StructuredDocumentation",
              "src": "1404:117:6",
              "text": " @dev When called by the buyer, this function sends the seller all funds and closes the agreement."
            },
            "functionSelector": "69d89575",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseFunds",
            "nameLocation": "1533:12:6",
            "parameters": {
              "id": 21138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1545:2:6"
            },
            "returnParameters": {
              "id": 21139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1555:0:6"
            },
            "scope": 21313,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21213,
            "nodeType": "FunctionDefinition",
            "src": "1896:333:6",
            "body": {
              "id": 21212,
              "nodeType": "Block",
              "src": "1949:280:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 21178,
                            "name": "agreements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21058,
                            "src": "1963:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                              "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                            }
                          },
                          "id": 21180,
                          "indexExpression": {
                            "id": 21179,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21174,
                            "src": "1974:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1963:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                            "typeString": "struct Escrow.Agreement storage ref"
                          }
                        },
                        "id": 21181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21066,
                        "src": "1963:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a204e6f206163746976652061677265656d656e7420666f7220746869732061646472657373",
                        "id": 21182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1989:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cd805d758ce4370fb80a367a0a8b1b35162c27b1907cf96b5ae3e628961c3",
                          "typeString": "literal_string \"Escrow: No active agreement for this address\""
                        },
                        "value": "Escrow: No active agreement for this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cd805d758ce4370fb80a367a0a8b1b35162c27b1907cf96b5ae3e628961c3",
                          "typeString": "literal_string \"Escrow: No active agreement for this address\""
                        }
                      ],
                      "id": 21177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1955:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:81:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21184,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:81:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2050:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2050:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 21188,
                              "name": "agreements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21058,
                              "src": "2064:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                                "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                              }
                            },
                            "id": 21190,
                            "indexExpression": {
                              "id": 21189,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21174,
                              "src": "2075:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2064:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                              "typeString": "struct Escrow.Agreement storage ref"
                            }
                          },
                          "id": 21191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21060,
                          "src": "2064:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2050:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a204f6e6c79207468652062757965722063616e20766f696420746869732061677265656d656e74",
                        "id": 21193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2090:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2ba873a09ac8d6d8b47a2887fea536bc287bacf5800746d53f1112400ad09da",
                          "typeString": "literal_string \"Escrow: Only the buyer can void this agreement\""
                        },
                        "value": "Escrow: Only the buyer can void this agreement"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2ba873a09ac8d6d8b47a2887fea536bc287bacf5800746d53f1112400ad09da",
                          "typeString": "literal_string \"Escrow: Only the buyer can void this agreement\""
                        }
                      ],
                      "id": 21185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2042:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:97:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21195,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:97:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 21199,
                            "name": "agreements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21058,
                            "src": "2161:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                              "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                            }
                          },
                          "id": 21201,
                          "indexExpression": {
                            "id": 21200,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21174,
                            "src": "2172:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2161:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                            "typeString": "struct Escrow.Agreement storage ref"
                          }
                        },
                        "id": 21202,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21062,
                        "src": "2161:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21196,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21174,
                        "src": "2146:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 21198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2146:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2146:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21204,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:40:6"
                },
                {
                  "expression": {
                    "id": 21210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 21205,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21058,
                          "src": "2192:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                            "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                          }
                        },
                        "id": 21207,
                        "indexExpression": {
                          "id": 21206,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21174,
                          "src": "2203:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2192:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                          "typeString": "struct Escrow.Agreement storage ref"
                        }
                      },
                      "id": 21208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21066,
                      "src": "2192:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 21209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2219:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2192:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21211,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:32:6"
                }
              ]
            },
            "documentation": {
              "id": 21172,
              "nodeType": "StructuredDocumentation",
              "src": "1775:118:6",
              "text": " @dev When called by the seller, this function returns funds to the buyer and closes the agreement."
            },
            "functionSelector": "46d6a60e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voidAgreement",
            "nameLocation": "1905:13:6",
            "parameters": {
              "id": 21175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21174,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1935:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 21213,
                  "src": "1919:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 21173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:15:6",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1918:23:6"
            },
            "returnParameters": {
              "id": 21176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1949:0:6"
            },
            "scope": 21313,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21260,
            "nodeType": "FunctionDefinition",
            "src": "2378:333:6",
            "body": {
              "id": 21259,
              "nodeType": "Block",
              "src": "2408:303:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 21218,
                            "name": "agreements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21058,
                            "src": "2422:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                              "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                            }
                          },
                          "id": 21221,
                          "indexExpression": {
                            "expression": {
                              "id": 21219,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2433:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2433:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2422:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                            "typeString": "struct Escrow.Agreement storage ref"
                          }
                        },
                        "id": 21222,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21066,
                        "src": "2422:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a204e6f206163746976652061677265656d656e7420666f7220746869732061646472657373",
                        "id": 21223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2453:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cd805d758ce4370fb80a367a0a8b1b35162c27b1907cf96b5ae3e628961c3",
                          "typeString": "literal_string \"Escrow: No active agreement for this address\""
                        },
                        "value": "Escrow: No active agreement for this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cd805d758ce4370fb80a367a0a8b1b35162c27b1907cf96b5ae3e628961c3",
                          "typeString": "literal_string \"Escrow: No active agreement for this address\""
                        }
                      ],
                      "id": 21217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2414:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2414:86:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21225,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:86:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21227,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2514:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2514:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 21229,
                              "name": "agreements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21058,
                              "src": "2533:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                                "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                              }
                            },
                            "id": 21232,
                            "indexExpression": {
                              "expression": {
                                "id": 21230,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2544:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2544:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2533:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                              "typeString": "struct Escrow.Agreement storage ref"
                            }
                          },
                          "id": 21233,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21064,
                          "src": "2533:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2514:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363726f773a20446561646c696e65206e6f742079657420686974",
                        "id": 21235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2566:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e310fdcf3c31b3b3abc756014c14cda3f675a464eb1ee25bc67d18765ef4a23",
                          "typeString": "literal_string \"Escrow: Deadline not yet hit\""
                        },
                        "value": "Escrow: Deadline not yet hit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e310fdcf3c31b3b3abc756014c14cda3f675a464eb1ee25bc67d18765ef4a23",
                          "typeString": "literal_string \"Escrow: Deadline not yet hit\""
                        }
                      ],
                      "id": 21226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2506:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2506:91:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21237,
                  "nodeType": "ExpressionStatement",
                  "src": "2506:91:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 21244,
                            "name": "agreements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21058,
                            "src": "2633:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                              "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                            }
                          },
                          "id": 21247,
                          "indexExpression": {
                            "expression": {
                              "id": 21245,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2644:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2644:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2633:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                            "typeString": "struct Escrow.Agreement storage ref"
                          }
                        },
                        "id": 21248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21062,
                        "src": "2633:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21240,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2612:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2612:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2604:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 21238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2604:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2604:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 21243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2604:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2604:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21250,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:59:6"
                },
                {
                  "expression": {
                    "id": 21257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 21251,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21058,
                          "src": "2669:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                            "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                          }
                        },
                        "id": 21254,
                        "indexExpression": {
                          "expression": {
                            "id": 21252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2680:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2680:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2669:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                          "typeString": "struct Escrow.Agreement storage ref"
                        }
                      },
                      "id": 21255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21066,
                      "src": "2669:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 21256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2701:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2669:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21258,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:37:6"
                }
              ]
            },
            "documentation": {
              "id": 21214,
              "nodeType": "StructuredDocumentation",
              "src": "2233:142:6",
              "text": " @dev When called by the buyer after the deadline, this function sends the seller all funds and \n closes the agreement."
            },
            "functionSelector": "2373eed1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recallFunds",
            "nameLocation": "2387:11:6",
            "parameters": {
              "id": 21215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:2:6"
            },
            "returnParameters": {
              "id": 21216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2408:0:6"
            },
            "scope": 21313,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21273,
            "nodeType": "FunctionDefinition",
            "src": "2763:101:6",
            "body": {
              "id": 21272,
              "nodeType": "Block",
              "src": "2822:42:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 21267,
                        "name": "agreements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21058,
                        "src": "2835:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                          "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                        }
                      },
                      "id": 21269,
                      "indexExpression": {
                        "id": 21268,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21262,
                        "src": "2846:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2835:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                        "typeString": "struct Escrow.Agreement storage ref"
                      }
                    },
                    "id": 21270,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "active",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21066,
                    "src": "2835:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21266,
                  "id": 21271,
                  "nodeType": "Return",
                  "src": "2828:31:6"
                }
              ]
            },
            "functionSelector": "9f8a13d7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "2772:8:6",
            "parameters": {
              "id": 21263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21262,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2789:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 21273,
                  "src": "2781:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:15:6"
            },
            "returnParameters": {
              "id": 21266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21273,
                  "src": "2816:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21264,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2816:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2815:6:6"
            },
            "scope": 21313,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21286,
            "nodeType": "FunctionDefinition",
            "src": "2868:105:6",
            "body": {
              "id": 21285,
              "nodeType": "Block",
              "src": "2931:42:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 21280,
                        "name": "agreements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21058,
                        "src": "2944:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                          "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                        }
                      },
                      "id": 21282,
                      "indexExpression": {
                        "id": 21281,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21275,
                        "src": "2955:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2944:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                        "typeString": "struct Escrow.Agreement storage ref"
                      }
                    },
                    "id": 21283,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21060,
                    "src": "2944:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 21279,
                  "id": 21284,
                  "nodeType": "Return",
                  "src": "2937:31:6"
                }
              ]
            },
            "functionSelector": "a323d29e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSeller",
            "nameLocation": "2877:9:6",
            "parameters": {
              "id": 21276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21275,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2895:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 21286,
                  "src": "2887:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2886:15:6"
            },
            "returnParameters": {
              "id": 21279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21286,
                  "src": "2922:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:9:6"
            },
            "scope": 21313,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21299,
            "nodeType": "FunctionDefinition",
            "src": "2977:105:6",
            "body": {
              "id": 21298,
              "nodeType": "Block",
              "src": "3040:42:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 21293,
                        "name": "agreements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21058,
                        "src": "3053:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                          "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                        }
                      },
                      "id": 21295,
                      "indexExpression": {
                        "id": 21294,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21288,
                        "src": "3064:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3053:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                        "typeString": "struct Escrow.Agreement storage ref"
                      }
                    },
                    "id": 21296,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21062,
                    "src": "3053:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21292,
                  "id": 21297,
                  "nodeType": "Return",
                  "src": "3046:31:6"
                }
              ]
            },
            "functionSelector": "f5a79767",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmount",
            "nameLocation": "2986:9:6",
            "parameters": {
              "id": 21289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21288,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3004:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 21299,
                  "src": "2996:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2996:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2995:15:6"
            },
            "returnParameters": {
              "id": 21292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21299,
                  "src": "3031:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:9:6"
            },
            "scope": 21313,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21312,
            "nodeType": "FunctionDefinition",
            "src": "3086:109:6",
            "body": {
              "id": 21311,
              "nodeType": "Block",
              "src": "3151:44:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 21306,
                        "name": "agreements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21058,
                        "src": "3164:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Agreement_$21067_storage_$",
                          "typeString": "mapping(address => struct Escrow.Agreement storage ref)"
                        }
                      },
                      "id": 21308,
                      "indexExpression": {
                        "id": 21307,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21301,
                        "src": "3175:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3164:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Agreement_$21067_storage",
                        "typeString": "struct Escrow.Agreement storage ref"
                      }
                    },
                    "id": 21309,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21064,
                    "src": "3164:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21305,
                  "id": 21310,
                  "nodeType": "Return",
                  "src": "3157:33:6"
                }
              ]
            },
            "functionSelector": "a2213262",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeadline",
            "nameLocation": "3095:11:6",
            "parameters": {
              "id": 21302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21301,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3115:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 21312,
                  "src": "3107:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3106:15:6"
            },
            "returnParameters": {
              "id": 21305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21304,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21312,
                  "src": "3142:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3141:9:6"
            },
            "scope": 21313,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Escrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21053,
          "nodeType": "StructuredDocumentation",
          "src": "66:339:6",
          "text": " @dev This contract allows for a 'buyer' to lock funds with a 'seller' to recieve these funds after \n the buyer determines conditions are met. At any time the seller may call off the deal and return \n funds to the buyer. After a predetermined deadline is passed, the buyer may back out of the deal and\n reclaim their funds."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21313
        ],
        "name": "Escrow",
        "nameLocation": "415:6:6",
        "scope": 21314,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 6
}